name: NodeJS with Webpack

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.19.0]

    steps:
    - uses: actions/checkout@v3

    - name: Install pkg
      run: npm install -g pkg

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: Get package.json version
      id: get-version
      run: echo ::set-output name=version::$(node -p "require('./package.json').version")

    - name: Display package.json version
      run: echo "Package version is ${{ steps.get-version.outputs.version }}"

    - name: Build
      run: |
        chmod +x generate_formula.sh  # Make the script executable
        chmod +x publish-release.sh  # Make the script executable
        npm install
        npm run build:webpack     # Generate build
#        npm run package           # Generate package sh executable file
#        npm run tar               # Generate zip file for brew publish
#        sh generate_formula.sh    # Generate brew rb file

#    - name: Create GitHub Release
#      uses: softprops/action-gh-release@v1
#      with:
#        files: |
#          ./build/tar/macos-x64-network-interceptor.tar.gz
#          ./build/tar/macos-arm64-network-interceptor.tar.gz
#          ./build/tar/linux-x64-network-interceptor.tar.gz
#          ./build/tar/linux-arm64-network-interceptor.tar.gz
#        tag_name: ${{ steps.get-version.outputs.version }}  # Specify the release tag name
#        release_name: Release v${{ steps.get-version.outputs.version }}  # Specify the release name
#        title: Release title v${{ steps.get-version.outputs.version }}  # Specify the release title
#        body: Release notes for v${{ steps.get-version.outputs.version }}  # Specify release notes
#      env:
#          GITHUB_TOKEN: ${{ secrets.API_TOKEN }}

    - name: Modify and commit file
      run: |
        # Configure Git with your user information
        git config user.name "gajendrakumartwinwal"
        git config user.email "gajendrakumartwinwal@gmail.com"
          
        # Add and commit the changes
#        git add network-interceptor.rb
        git add dist
        git commit -m "Update publish: ${{ steps.get-version.outputs.version }}"
          
        # Push the changes to the different repository using the PAT
        git push https://$PAT_TOKEN@github.com/gajendrakumartwinwal/homebrew-tap.git main
      env:
        PAT_TOKEN: ${{ secrets.API_TOKEN }}